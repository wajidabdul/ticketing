{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\micro-ticketing\\\\client\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport buildClient from \"../api/build-client\";\nimport Header from \"../components/header\";\n\nconst AppComponent = ({\n  Component,\n  pageProps,\n  currentUser\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nAppComponent.getInitialProps = async appContext => {\n  const client = buildClient(appContext.ctx);\n  const {\n    data\n  } = await client.get('/api/users/currentuser');\n  let pageProps = {};\n\n  if (appContext.Component.getInitialProps) {\n    pageProps = await appContext.Component.getInitialProps(appContext.ctx);\n  }\n\n  return _objectSpread({\n    pageProps\n  }, data);\n};\n\nexport default AppComponent;","map":{"version":3,"sources":["C:/xampp/htdocs/micro-ticketing/client/pages/_app.js"],"names":["buildClient","Header","AppComponent","Component","pageProps","currentUser","getInitialProps","appContext","client","ctx","data","get"],"mappings":";;;;;;;;;AAAA,OAAO,kCAAP;AACA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA2C;AAC5D,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;AASAF,YAAY,CAACI,eAAb,GAA+B,MAAOC,UAAP,IAAsB;AACjD,QAAMC,MAAM,GAAGR,WAAW,CAACO,UAAU,CAACE,GAAZ,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,MAAM,CAACG,GAAP,CAAW,wBAAX,CAAvB;AAEA,MAAIP,SAAS,GAAG,EAAhB;;AACA,MAAIG,UAAU,CAACJ,SAAX,CAAqBG,eAAzB,EAA0C;AACtCF,IAAAA,SAAS,GAAG,MAAMG,UAAU,CAACJ,SAAX,CAAqBG,eAArB,CAAqCC,UAAU,CAACE,GAAhD,CAAlB;AACH;;AAED;AACIL,IAAAA;AADJ,KAEOM,IAFP;AAIH,CAbD;;AAeA,eAAeR,YAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport buildClient from \"../api/build-client\";\r\nimport Header from \"../components/header\";\r\n\r\nconst AppComponent = ({ Component, pageProps, currentUser }) => {\r\n    return (\r\n        <div>\r\n            <Header currentUser={currentUser} />\r\n            <Component {...pageProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nAppComponent.getInitialProps = async (appContext) => {\r\n    const client = buildClient(appContext.ctx);\r\n    const { data } = await client.get('/api/users/currentuser');\r\n    \r\n    let pageProps = {};\r\n    if (appContext.Component.getInitialProps) {\r\n        pageProps = await appContext.Component.getInitialProps(appContext.ctx);\r\n    }\r\n    \r\n    return {\r\n        pageProps,\r\n        ...data\r\n    }\r\n};\r\n\r\nexport default AppComponent;"]},"metadata":{},"sourceType":"module"}