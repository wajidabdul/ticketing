{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/micro-ticketing/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/micro-ticketing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\micro-ticketing\\\\client\\\\pages\\\\tickets\\\\[ticketId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport useRequest from \"../../hooks/use-request\";\n\nvar TicketShow = function TicketShow(_ref) {\n  _s();\n\n  var ticket = _ref.ticket;\n\n  var _useRequest = useRequest({\n    url: '/api/orders',\n    method: 'post',\n    body: {\n      ticketId: ticket.id\n    },\n    onSuccess: function onSuccess(order) {\n      return console.log(order);\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ticket.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Price: \", ticket.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TicketShow, \"TJmWqLTkcyMEjC4U6ZF+i+LMXfQ=\", false, function () {\n  return [useRequest];\n});\n\n_c = TicketShow;\n\nTicketShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, client) {\n    var ticketId, _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ticketId = context.query.ticketId;\n            _context.next = 3;\n            return client.get(\"/api/tickets/\".concat(ticketId));\n\n          case 3:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", {\n              ticket: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default TicketShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketShow\");","map":{"version":3,"sources":["C:/xampp/htdocs/micro-ticketing/client/pages/tickets/[ticketId].js"],"names":["useRequest","TicketShow","ticket","url","method","body","ticketId","id","onSuccess","order","console","log","doRequest","errors","title","price","getInitialProps","context","client","query","get","data"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,oBACDF,UAAU,CAAC;AACrCG,IAAAA,GAAG,EAAE,aADgC;AAErCC,IAAAA,MAAM,EAAE,MAF6B;AAGrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAEJ,MAAM,CAACK;AADf,KAH+B;AAMrCC,IAAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,aAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA;AAN0B,GAAD,CADT;AAAA,MACvBG,SADuB,eACvBA,SADuB;AAAA,MACZC,MADY,eACZA,MADY;;AAU/B,sBACI;AAAA,4BACI;AAAA,gBAAKX,MAAM,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,4BAAYZ,MAAM,CAACa,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAjBD;;GAAMd,U;UAC4BD,U;;;KAD5BC,U;;AAmBNA,UAAU,CAACe,eAAX;AAAA,uEAA6B,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBZ,YAAAA,QADiB,GACJW,OAAO,CAACE,KADJ,CACjBb,QADiB;AAAA;AAAA,mBAEFY,MAAM,CAACE,GAAP,wBAA2Bd,QAA3B,EAFE;;AAAA;AAAA;AAEjBe,YAAAA,IAFiB,qBAEjBA,IAFiB;AAAA,6CAIlB;AAAEnB,cAAAA,MAAM,EAAEmB;AAAV,aAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAepB,UAAf","sourcesContent":["import useRequest from \"../../hooks/use-request\";\r\n\r\nconst TicketShow = ({ ticket }) => {\r\n    const { doRequest, errors } = useRequest({\r\n        url: '/api/orders',\r\n        method: 'post',\r\n        body: {\r\n            ticketId: ticket.id\r\n        },\r\n        onSuccess: (order) => console.log(order)\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>{ticket.title}</h1>\r\n            <h4>Price: {ticket.price}</h4>\r\n            <button className=\"btn btn-primary\">Purchase</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nTicketShow.getInitialProps = async (context, client) => {\r\n    const { ticketId } = context.query;\r\n    const { data } = await client.get(`/api/tickets/${ticketId}`);\r\n\r\n    return { ticket: data };\r\n};\r\n\r\nexport default TicketShow;"]},"metadata":{},"sourceType":"module"}