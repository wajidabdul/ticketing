{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/micro-ticketing/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/micro-ticketing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\micro-ticketing\\\\client\\\\pages\\\\orders\\\\[orderId].js\",\n    _this = this;\n\nvar OrderShow = function OrderShow(_ref) {\n  var order = _ref.order;\n  var msLeft = new Date(order.expiresAt) - new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [msLeft / 1000, \" seconds untill order expires\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = OrderShow;\n\nOrderShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, client) {\n    var orderId, _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            orderId = context.query.orderId;\n            _context.next = 3;\n            return client.get(\"/api/orders/\".concat(orderId));\n\n          case 3:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", {\n              order: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default OrderShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderShow\");","map":{"version":3,"sources":["C:/xampp/htdocs/micro-ticketing/client/pages/orders/[orderId].js"],"names":["OrderShow","order","msLeft","Date","expiresAt","getInitialProps","context","client","orderId","query","get","data"],"mappings":";;;;;;;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC7B,MAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,SAAf,IAA4B,IAAID,IAAJ,EAA3C;AAEA,sBACI;AAAA,eAAMD,MAAM,GAAG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CAND;;KAAMF,S;;AAQNA,SAAS,CAACK,eAAV;AAAA,uEAA4B,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,OADgB,GACJF,OAAO,CAACG,KADJ,CAChBD,OADgB;AAAA;AAAA,mBAEDD,MAAM,CAACG,GAAP,uBAA0BF,OAA1B,EAFC;;AAAA;AAAA;AAEhBG,YAAAA,IAFgB,qBAEhBA,IAFgB;AAAA,6CAIjB;AAAEV,cAAAA,KAAK,EAAEU;AAAT,aAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeX,SAAf","sourcesContent":["const OrderShow = ({ order }) => {\r\n    const msLeft = new Date(order.expiresAt) - new Date();\r\n\r\n    return (\r\n        <div>{msLeft / 1000} seconds untill order expires</div>\r\n    );\r\n};\r\n\r\nOrderShow.getInitialProps = async (context, client) => {\r\n    const { orderId } = context.query;\r\n    const { data } = await client.get(`/api/orders/${orderId}`);\r\n\r\n    return { order: data };\r\n};\r\n\r\nexport default OrderShow;"]},"metadata":{},"sourceType":"module"}